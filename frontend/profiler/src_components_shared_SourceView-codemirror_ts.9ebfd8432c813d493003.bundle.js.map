{"version":3,"file":"src_components_shared_SourceView-codemirror_ts.9ebfd8432c813d493003.bundle.js","mappings":"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","sources":["webpack:///./src/components/shared/SourceView-codemirror.ts","webpack:///./src/utils/codemirror-shared.ts"],"sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n/**\n * This module wraps all the interaction with the CodeMirror API into a\n * SourceViewEditor class.\n *\n * This module is intended to be imported asynchronously, so that all the\n * CodeMirror code can be split into a separate bundle chunk.\n *\n * This file implements the following features:\n *  - Display source code with syntax highlighting.\n *  - Display a gutter with:\n *    - \"Total\" timings for each line\n *    - \"Self\" timings for each line\n *    - The line number for each line\n *  - Highlight source code lines which have a non-zero timing, by applying\n *    a cm-nonZeroLine class to them. This highlight line goes across the entire\n *    width of the editor, it covers both the gutter and the main area.\n */\nimport { EditorView, lineNumbers } from '@codemirror/view';\nimport { EditorState, Compartment } from '@codemirror/state';\nimport { syntaxHighlighting } from '@codemirror/language';\nimport { classHighlighter } from '@lezer/highlight';\nimport { cpp } from '@codemirror/lang-cpp';\nimport { rust } from '@codemirror/lang-rust';\nimport { javascript } from '@codemirror/lang-javascript';\nimport clamp from 'clamp';\n\nimport type { LineTimings } from 'firefox-profiler/types';\nimport {\n  timingsExtension,\n  updateTimingsEffect,\n} from 'firefox-profiler/utils/codemirror-shared';\n\n// This \"compartment\" allows us to swap the syntax highlighting language when\n// the file path changes.\nconst languageConf = new Compartment();\n\n// Detect the right language based on the file extension.\nfunction _languageExtForPath(\n  path: string | null\n): any /* LanguageSupport | [] */ {\n  if (path === null) {\n    return [];\n  }\n  if (path.endsWith('.rs')) {\n    return rust();\n  }\n  if (\n    path.endsWith('.js') ||\n    path.endsWith('.jsm') ||\n    path.endsWith('.jsx') ||\n    path.endsWith('.mjs') ||\n    path.endsWith('.ts') ||\n    path.endsWith('.tsx')\n  ) {\n    return javascript();\n  }\n  if (\n    path.endsWith('.c') ||\n    path.endsWith('.cc') ||\n    path.endsWith('.cpp') ||\n    path.endsWith('.cxx') ||\n    path.endsWith('.h') ||\n    path.endsWith('.hpp') ||\n    path.endsWith('.m') ||\n    path.endsWith('.mm')\n  ) {\n    return cpp();\n  }\n  return [];\n}\n\n// Adjustments to make a CodeMirror editor work as a non-editable code viewer.\nconst codeViewerExtension = [\n  // Make the editor non-editable.\n  EditorView.editable.of(false),\n  // Allow tabbing to the view (to an element *inside* the scroller so that the\n  // up / down keys trigger scrolling), and take focus on mousedown.\n  EditorView.contentAttributes.of({ tabindex: '0' }),\n];\n\nexport class SourceViewEditor {\n  _view: EditorView;\n\n  // Create a CodeMirror editor and add it as a child element of domParent.\n  constructor(\n    initialText: string,\n    path: string,\n    timings: LineTimings,\n    domParent: Element\n  ) {\n    let state = EditorState.create({\n      doc: initialText,\n      extensions: [\n        timingsExtension,\n        lineNumbers(),\n        languageConf.of(_languageExtForPath(path)),\n        syntaxHighlighting(classHighlighter),\n        codeViewerExtension,\n      ],\n    });\n    state = state.update({\n      effects: updateTimingsEffect.of(timings),\n    }).state;\n    this._view = new EditorView({\n      state,\n      parent: domParent,\n    });\n  }\n\n  updateLanguageForFilePath(path: string | null) {\n    this._view.dispatch({\n      effects: languageConf.reconfigure(_languageExtForPath(path)),\n    });\n  }\n\n  setContents(text: string) {\n    // The CodeMirror way of replacing the entire contents is to insert new text\n    // and overwrite the full range of existing text.\n    this._view.dispatch(\n      this._view.state.update({\n        changes: {\n          insert: text,\n          from: 0,\n          to: this._view.state.doc.length,\n        },\n      })\n    );\n  }\n\n  setTimings(timings: LineTimings) {\n    // Update the value of the timings field by dispatching an updateTimingsEffect.\n    this._view.dispatch({\n      effects: updateTimingsEffect.of(timings),\n    });\n  }\n\n  scrollToLine(lineNumber: number) {\n    // Clamp the line number to the document's line count.\n    lineNumber = clamp(lineNumber, 1, this._view.state.doc.lines);\n\n    // Convert the line number into a position.\n    const pos = this._view.state.doc.line(lineNumber).from;\n    // Dispatch the scroll action.\n    this._view.dispatch({\n      effects: EditorView.scrollIntoView(pos, { y: 'start', yMargin: 0 }),\n    });\n    // Trigger a measure flush, to work around\n    // https://github.com/codemirror/codemirror.next/issues/676\n    this._view.coordsAtPos(0);\n  }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\nimport {\n  EditorView,\n  Decoration,\n  GutterMarker,\n  gutter,\n  gutterLineClass,\n} from '@codemirror/view';\nimport type { EditorState } from '@codemirror/state';\nimport { StateField, StateEffect, RangeSet } from '@codemirror/state';\n\nimport type { LineTimings } from 'firefox-profiler/types';\n\nimport { emptyLineTimings } from 'firefox-profiler/profile-logic/line-timings';\n\n// This gutter marker applies the \"cm-nonZeroLine\" class to gutter elements.\nconst nonZeroLineGutterMarker = new (class extends GutterMarker {\n  override elementClass = 'cm-nonZeroLine';\n})();\n\n// This \"decoration\" applies the \"cm-nonZeroLine\" class to the line of assembly\n// code in the main editor contents (not the gutter).\nconst nonZeroLineDecoration = Decoration.line({ class: 'cm-nonZeroLine' });\n\n// An \"effect\" is like a redux action. This effect is used to replace the value\n// of the timingsField state field.\nexport const updateTimingsEffect = StateEffect.define<LineTimings>();\n\n// A \"state field\" for the timings.\nconst timingsField = StateField.define<LineTimings>({\n  create() {\n    return emptyLineTimings;\n  },\n  update(timings, transaction) {\n    // This is like a reducer. Find an updateTimingsEffect in the transaction\n    // and set this field to the timings in it.\n    let newTimings = timings;\n    for (const effect of transaction.effects) {\n      if (effect.is(updateTimingsEffect)) {\n        newTimings = effect.value;\n      }\n    }\n    return newTimings;\n  },\n});\n\n// Finds all lines with non-zero line timings, for the highlight line.\n// The line numbers are then converted into \"positions\", i.e. character offsets\n// in the document, for the start of the line.\n// Then they are sorted, because our caller wants to have a sorted list.\nfunction getSortedStartPositionsOfNonZeroLines(state: EditorState): number[] {\n  const timings = state.field(timingsField);\n  const nonZeroLines = new Set<number>();\n  for (const lineNumber of timings.totalLineHits.keys()) {\n    nonZeroLines.add(lineNumber);\n  }\n  for (const lineNumber of timings.selfLineHits.keys()) {\n    nonZeroLines.add(lineNumber);\n  }\n  const lineCount = state.doc.lines;\n  const positions = Array.from(nonZeroLines)\n    .filter((l) => l >= 1 && l <= lineCount)\n    .map((lineNumber) => state.doc.line(lineNumber).from);\n  positions.sort((a, b) => a - b);\n  return positions;\n}\n\n// This is an \"extension\" which applies the \"cm-nonZeroLine\" class to all gutter\n// elements for lines with non-zero timings. It is like a piece of derived state;\n// it needs to be recomputed whenever one of the input states change. The input\n// states are the editor contents (\"doc\") and the value of the timings field.\n// The editor contents are relevant because the output is expressed in terms of\n// positions, i.e. character offsets from the document start, and those positions\n// need to be updated if the amount of text in a line changes. This happens when\n// we replace the file placeholder content with the actual file content.\nconst nonZeroLineGutterHighlighter = gutterLineClass.compute(\n  ['doc', timingsField],\n  (state) => {\n    const positions = getSortedStartPositionsOfNonZeroLines(state);\n    return RangeSet.of(positions.map((p) => nonZeroLineGutterMarker.range(p)));\n  }\n);\n\n// Same as the previous extension, but this one is for the main editor. There\n// doesn't seem to be a way to set a class for the entire line, i.e. both the\n// gutter elements and the main editor elements of that line.\nconst nonZeroLineDecorationHighlighter = EditorView.decorations.compute(\n  ['doc', timingsField],\n  (state) => {\n    const positions = getSortedStartPositionsOfNonZeroLines(state);\n    return RangeSet.of(positions.map((p) => nonZeroLineDecoration.range(p)));\n  }\n);\n\n// This is a \"gutter marker\" which renders just a string and nothing else.\n// It is used for the AddressTimings annotations, i.e. for the numbers in the\n// gutter.\nexport class StringMarker extends GutterMarker {\n  _s: string;\n\n  constructor(s: string) {\n    super();\n    this._s = s;\n  }\n\n  override toDOM() {\n    return document.createTextNode(this._s);\n  }\n}\n\n// The \"extension\" which manages the elements in the gutter for the \"total\"\n// column.\nconst totalTimingsGutter = gutter({\n  class: 'cm-total-timings-gutter',\n  lineMarker(view, line) {\n    // Return a gutter marker for this line, or null.\n    const lineNumber = view.state.doc.lineAt(line.from).number;\n    const timings = view.state.field(timingsField);\n    const totalTime = timings.totalLineHits.get(lineNumber);\n    return totalTime !== undefined ? new StringMarker(String(totalTime)) : null;\n  },\n  lineMarkerChange(update) {\n    // Return true if the update affects the total timings in the gutter.\n    return update.transactions.some((t) =>\n      t.effects.some((e) => e.is(updateTimingsEffect))\n    );\n  },\n});\n\n// The \"extension\" which manages the elements in the gutter for the \"self\"\n// column.\nconst selfTimingsGutter = gutter({\n  class: 'cm-self-timings-gutter',\n  lineMarker(view, line) {\n    // Return a gutter marker for this line, or null.\n    const lineNumber = view.state.doc.lineAt(line.from).number;\n    const timings = view.state.field(timingsField);\n    const selfTime = timings.selfLineHits.get(lineNumber);\n    return selfTime !== undefined ? new StringMarker(String(selfTime)) : null;\n  },\n  lineMarkerChange(update) {\n    // Return true if the update affects the self timings in the gutter.\n    return update.transactions.some((t) =>\n      t.effects.some((e) => e.is(updateTimingsEffect))\n    );\n  },\n});\n\n// All extensions which have to do with timings, grouped into one extension.\nexport const timingsExtension = [\n  timingsField,\n  totalTimingsGutter,\n  selfTimingsGutter,\n  nonZeroLineGutterHighlighter,\n  nonZeroLineDecorationHighlighter,\n];\n"],"names":["EditorView","lineNumbers","EditorState","Compartment","syntaxHighlighting","classHighlighter","cpp","rust","javascript","clamp","timingsExtension","updateTimingsEffect","languageConf","_languageExtForPath","path","endsWith","codeViewerExtension","editable","of","contentAttributes","tabindex","SourceViewEditor","constructor","initialText","timings","domParent","_view","state","create","doc","extensions","update","effects","parent","updateLanguageForFilePath","dispatch","reconfigure","setContents","text","changes","insert","from","to","length","setTimings","scrollToLine","lineNumber","lines","pos","line","scrollIntoView","y","yMargin","coordsAtPos","Decoration","GutterMarker","gutter","gutterLineClass","StateField","StateEffect","RangeSet","emptyLineTimings","nonZeroLineGutterMarker","args","elementClass","nonZeroLineDecoration","class","define","timingsField","transaction","newTimings","effect","is","value","getSortedStartPositionsOfNonZeroLines","field","nonZeroLines","Set","totalLineHits","keys","add","selfLineHits","lineCount","positions","Array","filter","l","map","sort","a","b","nonZeroLineGutterHighlighter","compute","p","range","nonZeroLineDecorationHighlighter","decorations","StringMarker","s","_s","toDOM","document","createTextNode","totalTimingsGutter","lineMarker","view","lineAt","number","totalTime","get","undefined","String","lineMarkerChange","transactions","some","t","e","selfTimingsGutter","selfTime"],"sourceRoot":""}